// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SearchWebAppService;

#nullable disable

namespace SearchWebAppService.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20211203113051_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.0");

            modelBuilder.Entity("Models.Account", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ITN")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("Models.Contact", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("PilotProjectId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Post")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PilotProjectId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("Models.PilotProject", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("InitializationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PilotTestingPhaseId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ProjectStageId")
                        .HasColumnType("TEXT");

                    b.Property<string>("SubordinateOrganization")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PilotTestingPhaseId");

                    b.HasIndex("ProjectStageId");

                    b.ToTable("PilotProjects");
                });

            modelBuilder.Entity("Models.PilotTestingPhase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("PilotTestingPhases");
                });

            modelBuilder.Entity("Models.ProjectStage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ProjectStages");
                });

            modelBuilder.Entity("Models.Startup", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("AccountId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("ContactId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageSrc")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsNeedSertification")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MoscowTransportOrganosation")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("PilotProjectExists")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProductBenefit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ProductUsageStage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReadyStage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RequestAccelerator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("TeamName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("ContactId");

                    b.ToTable("Startups");
                });

            modelBuilder.Entity("Models.Contact", b =>
                {
                    b.HasOne("Models.PilotProject", null)
                        .WithMany("Team")
                        .HasForeignKey("PilotProjectId");
                });

            modelBuilder.Entity("Models.PilotProject", b =>
                {
                    b.HasOne("Models.PilotTestingPhase", "PilotTestingPhase")
                        .WithMany()
                        .HasForeignKey("PilotTestingPhaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.ProjectStage", "ProjectStage")
                        .WithMany()
                        .HasForeignKey("ProjectStageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PilotTestingPhase");

                    b.Navigation("ProjectStage");
                });

            modelBuilder.Entity("Models.Startup", b =>
                {
                    b.HasOne("Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Models.PilotProject", b =>
                {
                    b.Navigation("Team");
                });
#pragma warning restore 612, 618
        }
    }
}
